plugins {
    id 'fabric-loom' version '1.2-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.version + '-' + project.build_number
group = project.maven_group

repositories {
    mavenCentral()
    // Uncomment to build with local Denizen-Core changes
    // mavenLocal()
    maven {
        name = "Denizen"
        url = "https://maven.citizensnpcs.co/repo"
    }
    maven {
        name = "DevAuth"
        url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1"
    }
    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation include("io.github.cottonmc:LibGui:${project.libgui_version}")

    implementation include("com.denizenscript:denizencore:${project.denizencore_version}")
    implementation include("org.yaml:snakeyaml:${project.snakeyaml_version}")

    modRuntimeOnly("me.djtheredstoner:DevAuth-fabric:${project.devauth_version}")
}

loom {
    runs {
        client {
            property("devauth.enabled", "true")
            property("devauth.account", "alt") // DevAuth's name for the Microsoft account in the default config
        }
    }
    accessWidenerPath = file("src/main/resources/clientizen.accesswidener")
}


processResources {
    inputs.property "version", version

    filesMatching("fabric.mod.json") {
        expand "version": version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}

jar {
    from("LICENSE") {
        rename { "${it}_${archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
